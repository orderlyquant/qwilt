{
  "hash": "9fa0008baf96928d63699291d46a7e8c",
  "result": {
    "markdown": "---\ntitle: \"Ha`rvest`ing S&P 500 Sectors\"\ndescription: |\n  \"Using open source data to look at within industry correlations.\"\nauthor: Brandon Farr\ndate: 01-28-2021\ncategories: ['tidyquant', 'rvest', 'janitor', 'finance']\n---\n\n::: {.cell}\n\n:::\n\n\nA little work with the `rvest` package. Try to get the current S&P 500\nconstituents from Wikipedia.\n\n\n::: {.cell}\n\n:::\n\n\nAccording to my [SelectorGadget](https://rvest.tidyverse.org/articles/articles/selectorgadget.html)\nwork, the element I am looking for is \"#constituents\"\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n{html_node}\n<table class=\"wikitable sortable\" id=\"constituents\">\n[1] <tbody>\\n<tr>\\n<th>\\n<a href=\"/wiki/Ticker_symbol\" title=\"Ticker symbol\"> ...\n```\n:::\n:::\n\n\nSince this is a table, it needs to be passed through the `html_table`\nfunction.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 503 × 9\n   symbol security        sec_f…¹ gics_…² gics_…³ headq…⁴ date_…⁵    cik founded\n   <chr>  <chr>           <chr>   <chr>   <chr>   <chr>   <chr>    <int> <chr>  \n 1 MMM    3M              reports Indust… Indust… Saint … 1976-0… 6.67e4 1902   \n 2 AOS    A. O. Smith     reports Indust… Buildi… Milwau… 2017-0… 9.11e4 1916   \n 3 ABT    Abbott          reports Health… Health… North … 1964-0… 1.8 e3 1888   \n 4 ABBV   AbbVie          reports Health… Pharma… North … 2012-1… 1.55e6 2013 (…\n 5 ABMD   Abiomed         reports Health… Health… Danver… 2018-0… 8.15e5 1981   \n 6 ACN    Accenture       reports Inform… IT Con… Dublin… 2011-0… 1.47e6 1989   \n 7 ATVI   Activision Bli… reports Commun… Intera… Santa … 2015-0… 7.19e5 2008   \n 8 ADM    ADM             reports Consum… Agricu… Chicag… 1981-0… 7.08e3 1902   \n 9 ADBE   Adobe Inc.      reports Inform… Applic… San Jo… 1997-0… 7.96e5 1982   \n10 ADP    ADP             reports Inform… Data P… Rosela… 1981-0… 8.67e3 1949   \n# … with 493 more rows, and abbreviated variable names ¹​sec_filings,\n#   ²​gics_sector, ³​gics_sub_industry, ⁴​headquarters_location, ⁵​date_first_added\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nWow! Sure enough, we get a tibble with what we want. Notice the use of\n`janitor` to clean up the column names for convenience. *I think I should\nalways do this.*\n\nLet's look at all of the stocks in the same `gics_sub_industry` as Apple.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  symbol security                   gics_sector            gics_sub_industry    \n  <chr>  <chr>                      <chr>                  <chr>                \n1 AAPL   Apple Inc.                 Information Technology Technology Hardware,…\n2 HPE    Hewlett Packard Enterprise Information Technology Technology Hardware,…\n3 HPQ    HP Inc.                    Information Technology Technology Hardware,…\n4 NTAP   NetApp                     Information Technology Technology Hardware,…\n5 STX    Seagate Technology         Information Technology Technology Hardware,…\n6 WDC    Western Digital            Information Technology Technology Hardware,…\n```\n:::\n:::\n\n\nThis is a great list to pass to `tidyquant` and try pulling some pricing data.\n\n\n::: {.cell}\n\n:::\n\n\nBy default, we get about a years worth of prices. Let's calculate returns:\n\n\n::: {.cell}\n\n:::\n\n\nNow, calculate the correlation matrix:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n# Groups:   symbol_1 [6]\n  symbol_1 symbol_2   cor\n  <chr>    <chr>    <dbl>\n1 AAPL     NTAP     0.574\n2 HPE      HPQ      0.690\n3 HPQ      HPE      0.690\n4 NTAP     HPE      0.670\n5 STX      WDC      0.643\n6 WDC      STX      0.643\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}